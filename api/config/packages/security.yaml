security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
        app_customer_provider:
            entity:
                class: App\Entity\Customer
                property: email
        chain_provider:
            chain:
                providers: [ app_user_provider, app_customer_provider ]
    firewalls:
        login:
            pattern: ^/api/login
            stateless: false
            two_factor:
                prepare_on_login: true
                prepare_on_access_denied: true
                auth_form_path: 2fa_login    # /api/login/2fa
                check_path: 2fa_login_check # /api/login/2fa_check
                post_only: true
                authentication_required_handler: App\Security\Authentication\TwoFactorAuthenticationRequiredHandler
                success_handler: App\Security\Authentication\TwoFactorAuthenticationSuccessHandler
                failure_handler: App\Security\Authentication\TwoFactorAuthenticationFailureHandler
                auth_code_parameter_name: authCode
                provider: chain_provider
            json_login:
                check_path: api_login_check
                success_handler: App\Security\Authentication\AuthenticationSuccessHandler
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
                provider: chain_provider
        refresh_token:
            provider: chain_provider
            pattern: ^/api/token/refresh
            stateless: true
            refresh_jwt:
                check_path: /api/token/refresh
        api:
            pattern:   ^/api
            stateless: true
            jwt:
                provider: chain_provider
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: chain_provider

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/register, roles: PUBLIC_ACCESS }
        - { path: ^/api/register/confirm, roles: PUBLIC_ACCESS }
        - { path: ^/api/register/resend, roles: PUBLIC_ACCESS }
        - { path: ^/api/login/check, roles: PUBLIC_ACCESS }
        - { path: ^/api/login/2fa, roles: IS_AUTHENTICATED_2FA_IN_PROGRESS  }
        - { path: ^/api/login/2fa_check, roles: IS_AUTHENTICATED_2FA_IN_PROGRESS }
        - { path: ^/api/token/refresh, roles: PUBLIC_ACCESS }
        - { path: ^/api/settings, roles: ROLE_ADMIN }
        - { path: ^/api/model, roles: ROLE_ACCESS_ADMIN_PANEL }
        - { path: ^/api/public/model, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/device, roles: ROLE_ACCESS_ADMIN_PANEL }
        - { path: ^/api/document, roles: ROLE_ACCESS_ADMIN_PANEL }
        - { path: ^/api/public/document, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/file/display/*, roles: PUBLIC_ACCESS }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
